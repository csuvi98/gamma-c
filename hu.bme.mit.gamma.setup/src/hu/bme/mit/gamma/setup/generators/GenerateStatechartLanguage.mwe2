/********************************************************************************
 * Copyright (c) 2018 Contributors to the Gamma project
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * SPDX-License-Identifier: EPL-1.0
 ********************************************************************************/
module hu.bme.mit.gamma.setup.generators.GenerateStatechartLanguage

/*************DOES NOT WORK YET**************/

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.emf.ecore.resource.impl.*

var rootPath = "../core"

Workflow {
	bean = ResourceSetImpl : resourceSet {}
    bean = StandaloneSetup { resourceSet = resourceSet
    	platformUri = "${rootPath}"
    	scanClassPath = true
    	
    	registerGenModelFile = "platform:/resource/hu.bme.mit.gamma.expression.model/model/expression.genmodel"
    	registerGeneratedEPackage = "hu.bme.mit.gamma.expression.model.ExpressionModelPackage"
    	registerGenModelFile = "platform:/resource/hu.bme.mit.gamma.action.model/model/action.genmodel"
    	registerGeneratedEPackage = "hu.bme.mit.gamma.action.model.ActionModelPackage"
    	registerGenModelFile = "platform:/resource/hu.bme.mit.gamma.statechart.model/model/statechart.genmodel"
    	registerEcoreFile = "platform:/resource/hu.bme.mit.gamma.statechart.model/model/statechart.ecore"
    	registerGeneratedEPackage = "hu.bme.mit.gamma.statechart.model.StatechartModelPackage"
    	registerGeneratedEPackage = "hu.bme.mit.gamma.statechart.model.interface_.InterfacePackage"
    	registerGeneratedEPackage = "hu.bme.mit.gamma.statechart.model.composite.CompositePackage"
    	registerGeneratedEPackage = "hu.bme.mit.gamma.statechart.model.contract.ContractPackage"
    	registerGeneratedEPackage = "hu.bme.mit.gamma.statechart.model.phase.PhasePackage"
    }
    
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "hu.bme.mit.gamma.statechart.language"
				rootPath = rootPath
				eclipsePlugin = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {			
			referencedResource = "platform:/resource/hu.bme.mit.gamma.expression.language/src/hu/bme/mit/gamma/expression/language/ExpressionLanguage.xtext"
			referencedResource = "platform:/resource/hu.bme.mit.gamma.action.language/src/hu/bme/mit/gamma/action/language/ActionLanguage.xtext"
			name = "hu.bme.mit.gamma.statechart.language.StatechartLanguage"
			fileExtensions = "gcd"
			//referencedResource = "platform:/resource/hu.bme.mit.gamma.statechart.model/model/statechart.genmodel"
			
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			fragment = org.eclipse.xtext.generator.adapter.FragmentAdapter {
				fragment = org.eclipse.xtext.generator.ecore2xtext.FormatterFragment {}
			}

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
